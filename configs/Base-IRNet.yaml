MODEL:
  META_ARCHITECTURE: "IRNet"
  BACKBONE:
    NAME: "build_resnet_backbone"
  RESNETS:
    NORM: "GN"
    OUT_FEATURES: ["stem","res2","res3", "res4", "res5"]
  IRNET:
    DISP_HEAD: [
      {"input_key" : ["stem"], "sample" : [0.5], "out_channel" : 64, "kernel" : 1, "stride" : 1, "out_key" : "out1"},
      {"input_key" : ["res2"], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "out2"},
      {"input_key" : ["res3"], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "out3"},
      {"input_key" : ["res4"], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "out4"},
      {"input_key" : ["res5"], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "out5"},
      {"input_key" : ["out3", "out4", "out5"], "sample" : [1, 2, 2], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "agg0"},
      {"input_key" : ["agg0", "out0", "out1"], "sample" : [1, 1, 2], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "disp0"},
      {"input_key" : ["disp0"], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "dips1"},
      {"input_key" : ["disp1"], "out_channel" : 2, "kernel" : 1, "stride" : 1, "out_key" : "last"},
    ]
    CLS_BND_HEAD: [
      {"input_key" : ["stem"], "sample" : [0.5], "out_channel" : 64, "kernel" : 1, "stride" : 1, "out_key" : "out1"},
      {"input_key" : ["res2"], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "out2"},
      {"input_key" : ["res3"], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "out3"},
      {"input_key" : ["res4"], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "out4"},
      {"input_key" : ["res5"], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "out5"},
      {"input_key" : ["out1", "out2", "out3", "out4", "out5"], "sample" : [1, 1, 2, 4, 4], "out_channel" : 256, "kernel" : 1, "stride" : 1, "out_key" : "last"},
    ]

DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.01  # Note that RetinaNet uses a different default learning rate
  STEPS: (60000, 80000)
  MAX_ITER: 90000
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
VERSION: 2
